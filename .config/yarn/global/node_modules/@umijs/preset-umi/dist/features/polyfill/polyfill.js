var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/features/polyfill/polyfill.ts
var polyfill_exports = {};
__export(polyfill_exports, {
  default: () => polyfill_default
});
module.exports = __toCommonJS(polyfill_exports);
var import_core = require("@umijs/bundler-utils/compiled/babel/core");
var import_utils = require("@umijs/utils");
var import_path = require("path");
var polyfill_default = (api) => {
  api.describe({
    key: "polyfill",
    config: {
      schema(Joi) {
        return Joi.object().keys({
          imports: Joi.array().items(Joi.string()).required().unique()
        });
      }
    },
    enableBy: () => {
      return process.env.BABEL_POLYFILL !== "none";
    }
  });
  api.onGenerateFiles(() => {
    var _a, _b;
    const coreJsImports = ((_a = api.config.polyfill) == null ? void 0 : _a.imports) ? (_b = api.config.polyfill) == null ? void 0 : _b.imports.map((item) => `import '${item}';`).join("\n") : `import 'core-js';`;
    const { code } = (0, import_core.transform)(`
${coreJsImports}
import '${(0, import_utils.winPath)(require.resolve("regenerator-runtime/runtime"))}';
export {};
`, {
      filename: "polyfill.ts",
      presets: [
        [
          require.resolve("@umijs/bundler-utils/compiled/babel/preset-env"),
          {
            useBuiltIns: "entry",
            corejs: (0, import_utils.getCorejsVersion)((0, import_path.join)(__dirname, "../../../package.json")),
            modules: false,
            targets: api.config.targets
          }
        ]
      ],
      plugins: [
        require.resolve("@umijs/babel-preset-umi/dist/plugins/lockCoreJS")
      ]
    });
    api.writeTmpFile({
      path: "core/polyfill.ts",
      noPluginDir: true,
      content: code
    });
  });
  api.addPolyfillImports(() => [{ source: `./core/polyfill` }]);
  api.modifyConfig((memo) => {
    memo.alias["regenerator-runtime"] = (0, import_path.dirname)(require.resolve("regenerator-runtime/package"));
    return memo;
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
